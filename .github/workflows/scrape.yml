name: Track Entire Website Changes with Puppeteer

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '6,26,46 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20  # Updated to Node.js 20

    - name: Install Puppeteer
      run: npm install puppeteer

    - name: Fetch website with Puppeteer
      run: |
        mkdir -p act.org.nz_site_tracking
        cat << 'EOF' > fetch-site.js
        const puppeteer = require('puppeteer');
        const fs = require('fs');
        const path = require('path');

        (async () => {
          const browser = await puppeteer.launch();
          const page = await browser.newPage();

          try {
            // Navigate to the website
            await page.goto('https://www.act.org.nz/', { waitUntil: 'networkidle2' });

            // Save the full page HTML content
            const htmlContent = await page.content();
            fs.writeFileSync(path.join('act.org.nz_site_tracking', 'index.html'), htmlContent);

            // Download additional resources (CSS, JS, Images) - optional
            const urls = await page.evaluate(() =>
              Array.from(document.querySelectorAll('link[rel="stylesheet"], script[src], img[src]'), (el) => el.href || el.src)
            );

            for (const url of urls) {
              try {
                const response = await page.goto(url);
                const buffer = await response.buffer();
                const fileName = url.split('/').pop();
                const filePath = path.join('act.org.nz_site_tracking', fileName);
                fs.writeFileSync(filePath, buffer);
              } catch (err) {
                console.error(`Failed to download resource: ${url}`, err);
              }
            }
          } catch (err) {
            console.error('Error fetching the website:', err);
          } finally {
            await browser.close();
          }
        })();
        EOF

        # Run the Puppeteer script
        node fetch-site.js

    - name: Commit and push changes
      run: |
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        
        # Count the number of files changed
        file_count=$(git diff --cached --name-only | wc -l)
        
        # List the files changed
        files_changed=$(git diff --cached --name-only | tr '\n' ', ')
        
        # Commit with the list of files changed
        git commit -m "Latest website snapshot: ${timestamp} | Files changed: ${file_count} | Files: ${files_changed}" || exit 0
        
        git push