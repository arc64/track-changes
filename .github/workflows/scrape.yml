name: Debugging Puppeteer Script

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '6,26,46 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Puppeteer and Dependencies
      run: |
        echo "Installing Puppeteer and downloading Chromium..."
        npm install puppeteer --force

    - name: Verify Chromium Installation
      run: |
        echo "Checking Chromium installation..."
        which chromium-browser || echo "Chromium not found"
        chromium-browser --version || echo "Cannot determine Chromium version"

    # - name: Debug Chromium Path
    #   run: |
    #     echo "Checking Chromium executable path..."
    #     ls -la /usr/bin | grep chromium
    #     ls -la /snap/bin | grep chromium

    - name: Create fetch-site.mjs
      run: |
        echo "Creating fetch-site.mjs..."
        pwd
        ls -la
        cat << 'EOF' > fetch-site.mjs
        import puppeteer from 'puppeteer';
        import fs from 'fs';
        import path from 'path';

        (async () => {
          const directory = 'act.org.nz_site_tracking';

          // Ensure the directory exists
          if (!fs.existsSync(directory)) {
            fs.mkdirSync(directory, { recursive: true });
            console.log(`Directory created: ${directory}`);
          }

          console.log('Launching Puppeteer...');
          const browser = await puppeteer.launch({
            executablePath: '/usr/local/share/chromium/chrome-linux/chrome',
            headless: true,
          });
          const page = await browser.newPage();

          try {
            console.log('Navigating to https://www.act.org.nz/...');
            await page.goto('https://www.act.org.nz/', { waitUntil: 'networkidle2' });
            console.log('Page loaded.');
            const htmlContent = await page.content();
            fs.writeFileSync(path.join('act.org.nz_site_tracking', 'index.html'), htmlContent);
            console.log('Saved index.html.');
          } catch (err) {
            console.error('Error during Puppeteer operation:', err);
          } finally {
            console.log('Closing Puppeteer...');
            await browser.close();
            console.log('Puppeteer closed.');
          }
        })();
        EOF
        echo "fetch-site.mjs created successfully."

    - name: Verify fetch-site.mjs
      run: |
        echo "Verifying fetch-site.mjs exists..."
        ls -la
        cat fetch-site.mjs || echo "Error: fetch-site.mjs does not exist!"

    - name: Debug Environment
      run: |
        echo "Current working directory:"
        pwd
        echo "Node.js version:"
        node -v
        echo "Installed npm packages:"
        npm list --depth=0

    - name: Run Puppeteer Script
      run: |
        echo "Running fetch-site.mjs..."
        if [ ! -f fetch-site.mjs ]; then
          echo "Error: fetch-site.mjs does not exist!" >&2
          exit 1
        fi
        node fetch-site.mjs
    - name: Verify Output Files
      run: |
        echo "Checking act.org.nz_site_tracking directory..."
        ls -la act.org.nz_site_tracking || echo "Error: Output directory is missing!"
        echo "Verifying index.html..."
        if [ -f act.org.nz_site_tracking/index.html ]; then
          echo "index.html exists."
        else
          echo "Error: index.html is missing!"
        fi

    - name: Commit and Push Changes
      run: |
        echo "Configuring Git..."
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        echo "Staging files..."
        git add -A
        echo "Files staged for commit:"
        git diff --cached --name-only || echo "Error: No files staged."
        timestamp=$(date -u)
        echo "Attempting to commit..."
        git commit -m "Latest website snapshot: ${timestamp}" || echo "No changes to commit."
        echo "Attempting to push changes..."
        git push || echo "Error: Failed to push changes."
